{"version":3,"file":"memo.types.js","sources":["../../../../../../../src/memo.types.ts"],"sourcesContent":["import { MemoFrame } from './drivers';\nimport { MemoAspectError } from './errors';\n\nconst KEY_IDENTIFIER = '@aspectjs:Memo';\n\n/**\n * @public\n */\nexport class MemoKey {\n    public readonly namespace: string;\n    public readonly targetKey: string;\n    public readonly instanceId: string;\n    public readonly argsKey: string;\n    private readonly _strValue: string;\n\n    constructor(key: Omit<MemoKey, '_strValue'>, namespace?: string) {\n        this.namespace = namespace ?? key.namespace;\n        this.targetKey = key.targetKey;\n        this.instanceId = key.instanceId;\n        this.argsKey = key.argsKey;\n        this._strValue = `${KEY_IDENTIFIER}:ns=${this.namespace}&tk=${this.targetKey}&id=${this.instanceId}&ak=${this.argsKey}`;\n    }\n\n    static parse(str: string, throwIfInvalid = true): MemoKey | null {\n        if (!str.startsWith(KEY_IDENTIFIER)) {\n            throw new TypeError(`Key ${str} is not a memo key`);\n        }\n        const rx = new RegExp(\n            `${KEY_IDENTIFIER}:ns=(?<namespace>.*?)&tk=(?<targetKey>.*?)&id=(?<instanceId>.*?)&ak=(?<argsKey>.*)`,\n        );\n        const r = rx.exec(str);\n        if (!r) {\n            if (throwIfInvalid) {\n                throw new MemoAspectError(`given expression is not a MemoKey: ${str}`);\n            }\n            return null;\n        }\n        return new MemoKey(r.groups as any);\n    }\n\n    toString(): string {\n        return this._strValue;\n    }\n}\n\n/**\n * @public\n */\nexport interface MemoEntry<T = any> {\n    readonly key: MemoKey;\n    readonly frame: MemoFrame<T>;\n    readonly signature?: string;\n    readonly expiration?: Date;\n}\n"],"names":[],"mappings":";;AAGA,MAAM,cAAc,GAAG,gBAAgB,CAAC;AAExC;;;MAGa,OAAO;IAOhB,YAAY,GAA+B,EAAE,SAAkB;QAC3D,IAAI,CAAC,SAAS,GAAG,SAAS,aAAT,SAAS,cAAT,SAAS,GAAI,GAAG,CAAC,SAAS,CAAC;QAC5C,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;QACjC,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC,OAAO,CAAC;QAC3B,IAAI,CAAC,SAAS,GAAG,GAAG,cAAc,OAAO,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,SAAS,OAAO,IAAI,CAAC,UAAU,OAAO,IAAI,CAAC,OAAO,EAAE,CAAC;KAC3H;IAED,OAAO,KAAK,CAAC,GAAW,EAAE,cAAc,GAAG,IAAI;QAC3C,IAAI,CAAC,GAAG,CAAC,UAAU,CAAC,cAAc,CAAC,EAAE;YACjC,MAAM,IAAI,SAAS,CAAC,OAAO,GAAG,oBAAoB,CAAC,CAAC;SACvD;QACD,MAAM,EAAE,GAAG,IAAI,MAAM,CACjB,GAAG,cAAc,oFAAoF,CACxG,CAAC;QACF,MAAM,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;QACvB,IAAI,CAAC,CAAC,EAAE;YACJ,IAAI,cAAc,EAAE;gBAChB,MAAM,IAAI,eAAe,CAAC,sCAAsC,GAAG,EAAE,CAAC,CAAC;aAC1E;YACD,OAAO,IAAI,CAAC;SACf;QACD,OAAO,IAAI,OAAO,CAAC,CAAC,CAAC,MAAa,CAAC,CAAC;KACvC;IAED,QAAQ;QACJ,OAAO,IAAI,CAAC,SAAS,CAAC;KACzB;;;;;"}