{"version":3,"file":"default.profile.js","sources":["../../../../../../../../src/profiles/default.profile.ts"],"sourcesContent":["import { WeaverProfile } from '@aspectjs/core/commons';\nimport { DefaultCacheableAspect } from '../cacheable/cacheable.aspect';\nimport { IdbMemoDriver, LsMemoDriver, LsMemoSerializer, LzMemoSerializer, MemoDriver } from '../drivers';\nimport { DEFAULT_MARSHALLERS, MemoAspect, MemoAspectOptions } from '../memo.aspect';\n\n/**\n * @public\n */\nexport interface MemoProfileFeatures {\n    useLocalStorage?: boolean;\n    useIndexedDb?: boolean;\n    useLzString?: boolean;\n    options?: MemoAspectOptions;\n}\n\n/**\n * Weaver profile configured with\n * - LsMemoAspect (for synchronous @Memo methods)\n *     - LzMemoHandler to compress data stored in LocalStorage\n * - IndexedDbMemoAspect (for asynchronous @Memo methods)\n * @public\n */\nexport class MemoProfile extends WeaverProfile {\n    protected _features: MemoProfileFeatures = {\n        useLocalStorage: true,\n        useIndexedDb: true,\n        useLzString: true,\n        options: {},\n    };\n    constructor(memoProfileFeatures?: MemoProfileFeatures) {\n        super();\n\n        this.enable(new DefaultCacheableAspect());\n        this._features.options = memoProfileFeatures?.options ?? this._features.options;\n        this._features.useIndexedDb = memoProfileFeatures?.useIndexedDb ?? this._features.useIndexedDb;\n        this._features.useLzString = memoProfileFeatures?.useLzString ?? this._features.useLzString;\n        this._features.useLocalStorage = memoProfileFeatures?.useLocalStorage ?? this._features.useLocalStorage;\n\n        const marshallers = [...DEFAULT_MARSHALLERS];\n        const drivers: MemoDriver[] = [];\n\n        if (this._features.useIndexedDb) {\n            drivers.push(new IdbMemoDriver());\n        }\n\n        if (this._features.useLocalStorage) {\n            let serializer: LsMemoSerializer;\n            if (this._features.useLzString) {\n                serializer = new LzMemoSerializer();\n            }\n            drivers.push(\n                new LsMemoDriver({\n                    serializer,\n                }),\n            );\n        }\n\n        const memoAspect = new MemoAspect({\n            ...this._features.options,\n            marshallers,\n            drivers,\n        });\n\n        this.enable(memoAspect);\n    }\n\n    public configure(features: MemoProfileFeatures): MemoProfile {\n        return new MemoProfile({ ...this._features, ...features });\n    }\n}\n"],"names":[],"mappings":";;;;;;;AAeA;;;;;;;MAOa,WAAY,SAAQ,aAAa;IAO1C,YAAY,mBAAyC;;QACjD,KAAK,EAAE,CAAC;QAPF,cAAS,GAAwB;YACvC,eAAe,EAAE,IAAI;YACrB,YAAY,EAAE,IAAI;YAClB,WAAW,EAAE,IAAI;YACjB,OAAO,EAAE,EAAE;SACd,CAAC;QAIE,IAAI,CAAC,MAAM,CAAC,IAAI,sBAAsB,EAAE,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,OAAO,mCAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;QAChF,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,YAAY,mCAAI,IAAI,CAAC,SAAS,CAAC,YAAY,CAAC;QAC/F,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,WAAW,mCAAI,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC;QAC5F,IAAI,CAAC,SAAS,CAAC,eAAe,GAAG,MAAA,mBAAmB,aAAnB,mBAAmB,uBAAnB,mBAAmB,CAAE,eAAe,mCAAI,IAAI,CAAC,SAAS,CAAC,eAAe,CAAC;QAExG,MAAM,WAAW,GAAG,CAAC,GAAG,mBAAmB,CAAC,CAAC;QAC7C,MAAM,OAAO,GAAiB,EAAE,CAAC;QAEjC,IAAI,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE;YAC7B,OAAO,CAAC,IAAI,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;SACrC;QAED,IAAI,IAAI,CAAC,SAAS,CAAC,eAAe,EAAE;YAChC,IAAI,UAA4B,CAAC;YACjC,IAAI,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE;gBAC5B,UAAU,GAAG,IAAI,gBAAgB,EAAE,CAAC;aACvC;YACD,OAAO,CAAC,IAAI,CACR,IAAI,YAAY,CAAC;gBACb,UAAU;aACb,CAAC,CACL,CAAC;SACL;QAED,MAAM,UAAU,GAAG,IAAI,UAAU,iCAC1B,IAAI,CAAC,SAAS,CAAC,OAAO,KACzB,WAAW;YACX,OAAO,IACT,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;KAC3B;IAEM,SAAS,CAAC,QAA6B;QAC1C,OAAO,IAAI,WAAW,iCAAM,IAAI,CAAC,SAAS,GAAK,QAAQ,EAAG,CAAC;KAC9D;;;;;"}