{"version":3,"file":"memo.driver.js","sources":["../../../../../../../../src/drivers/memo.driver.ts"],"sourcesContent":["import { MarshallingContext } from '../marshalling/marshalling-context';\nimport { MemoEntry, MemoKey } from '../memo.types';\n\n/**\n * Connects the MemoAspect to a storage back-end\n * @public\n */\nexport abstract class MemoDriver {\n    abstract getKeys(namespace?: string): Promise<MemoKey[]>;\n\n    /**\n     * Get the name of the driver this aspect uses.\n     */\n    abstract get NAME(): string;\n\n    /**\n     * Get the priority this driver should be picked up to handle the given type.\n     */\n    getPriority(context: MarshallingContext): number {\n        return 0;\n    }\n\n    accepts(context: MarshallingContext): boolean {\n        return true;\n    }\n\n    /**\n     * Returns the cached value.\n     * @param key - the key of storage entry to read\n     */\n    abstract read(key: MemoKey): MemoEntry;\n\n    /**\n     * Returns a promise that is resolved once value is saved.\n     */\n    abstract write(entry: MemoEntry): PromiseLike<void>;\n\n    abstract remove(key: MemoKey): PromiseLike<void>;\n}\n"],"names":[],"mappings":"AAGA;;;;MAIsB,UAAU;;;;IAW5B,WAAW,CAAC,OAA2B;QACnC,OAAO,CAAC,CAAC;KACZ;IAED,OAAO,CAAC,OAA2B;QAC/B,OAAO,IAAI,CAAC;KACf;;;;;"}