{"version":3,"file":"lz-string.js","sources":["../../../../../../../../src/utils/lz-string.ts"],"sourcesContent":["/*!\nMIT License\nCopyright (c) 2013 pieroxy\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n*/\n\nconst f = String.fromCharCode;\n\nexport function compressToUTF16(input: string) {\n    if (input == null) return '';\n    return (\n        _compress(input, 15, function (a) {\n            return f(a + 32);\n        }) + ' '\n    );\n}\n\nexport function decompressFromUTF16(compressed: string) {\n    if (compressed == null) return '';\n    if (compressed == '') return null;\n    return _decompress(compressed.length, 16384, function (index: number) {\n        return compressed.charCodeAt(index) - 32;\n    });\n}\n\nfunction _compress(uncompressed: string, bitsPerChar: number, getCharFromInt: (c: number) => string) {\n    if (uncompressed == null) return '';\n    const context_dictionary: Record<string, number> = {};\n    const context_dictionaryToCreate: Record<string, boolean> = {};\n    const context_data = [];\n\n    let i,\n        value,\n        context_c = '',\n        context_wc = '',\n        context_w = '',\n        context_enlargeIn = 2, // Compensate for the first entry which should not count\n        context_dictSize = 3,\n        context_numBits = 2,\n        context_data_val = 0,\n        context_data_position = 0;\n\n    for (let ii = 0; ii < uncompressed.length; ii += 1) {\n        context_c = uncompressed.charAt(ii);\n        if (!Object.prototype.hasOwnProperty.call(context_dictionary, context_c)) {\n            context_dictionary[context_c] = context_dictSize++;\n            context_dictionaryToCreate[context_c] = true;\n        }\n\n        context_wc = context_w + context_c;\n        if (Object.prototype.hasOwnProperty.call(context_dictionary, context_wc)) {\n            context_w = context_wc;\n        } else {\n            if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n                if (context_w.charCodeAt(0) < 256) {\n                    for (i = 0; i < context_numBits; i++) {\n                        context_data_val = context_data_val << 1;\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                    }\n                    value = context_w.charCodeAt(0);\n                    for (i = 0; i < 8; i++) {\n                        context_data_val = (context_data_val << 1) | (value & 1);\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = value >> 1;\n                    }\n                } else {\n                    value = 1;\n                    for (i = 0; i < context_numBits; i++) {\n                        context_data_val = (context_data_val << 1) | value;\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = 0;\n                    }\n                    value = context_w.charCodeAt(0);\n                    for (i = 0; i < 16; i++) {\n                        context_data_val = (context_data_val << 1) | (value & 1);\n                        if (context_data_position == bitsPerChar - 1) {\n                            context_data_position = 0;\n                            context_data.push(getCharFromInt(context_data_val));\n                            context_data_val = 0;\n                        } else {\n                            context_data_position++;\n                        }\n                        value = value >> 1;\n                    }\n                }\n                context_enlargeIn--;\n                if (context_enlargeIn == 0) {\n                    context_enlargeIn = Math.pow(2, context_numBits);\n                    context_numBits++;\n                }\n                delete context_dictionaryToCreate[context_w];\n            } else {\n                value = context_dictionary[context_w];\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            }\n            context_enlargeIn--;\n            if (context_enlargeIn == 0) {\n                context_enlargeIn = Math.pow(2, context_numBits);\n                context_numBits++;\n            }\n            // Add wc to the dictionary.\n            context_dictionary[context_wc] = context_dictSize++;\n            context_w = String(context_c);\n        }\n    }\n\n    // Output the code for w.\n    if (context_w !== '') {\n        if (Object.prototype.hasOwnProperty.call(context_dictionaryToCreate, context_w)) {\n            if (context_w.charCodeAt(0) < 256) {\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = context_data_val << 1;\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                }\n                value = context_w.charCodeAt(0);\n                for (i = 0; i < 8; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            } else {\n                value = 1;\n                for (i = 0; i < context_numBits; i++) {\n                    context_data_val = (context_data_val << 1) | value;\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = 0;\n                }\n                value = context_w.charCodeAt(0);\n                for (i = 0; i < 16; i++) {\n                    context_data_val = (context_data_val << 1) | (value & 1);\n                    if (context_data_position == bitsPerChar - 1) {\n                        context_data_position = 0;\n                        context_data.push(getCharFromInt(context_data_val));\n                        context_data_val = 0;\n                    } else {\n                        context_data_position++;\n                    }\n                    value = value >> 1;\n                }\n            }\n            context_enlargeIn--;\n            if (context_enlargeIn == 0) {\n                context_enlargeIn = Math.pow(2, context_numBits);\n                context_numBits++;\n            }\n            delete context_dictionaryToCreate[context_w];\n        } else {\n            value = context_dictionary[context_w];\n            for (i = 0; i < context_numBits; i++) {\n                context_data_val = (context_data_val << 1) | (value & 1);\n                if (context_data_position == bitsPerChar - 1) {\n                    context_data_position = 0;\n                    context_data.push(getCharFromInt(context_data_val));\n                    context_data_val = 0;\n                } else {\n                    context_data_position++;\n                }\n                value = value >> 1;\n            }\n        }\n        context_enlargeIn--;\n        if (context_enlargeIn == 0) {\n            context_enlargeIn = Math.pow(2, context_numBits);\n            context_numBits++;\n        }\n    }\n\n    // Mark the end of the stream\n    value = 2;\n    for (i = 0; i < context_numBits; i++) {\n        context_data_val = (context_data_val << 1) | (value & 1);\n        if (context_data_position == bitsPerChar - 1) {\n            context_data_position = 0;\n            context_data.push(getCharFromInt(context_data_val));\n            context_data_val = 0;\n        } else {\n            context_data_position++;\n        }\n        value = value >> 1;\n    }\n\n    // Flush the last char\n    while (true) {\n        context_data_val = context_data_val << 1;\n        if (context_data_position == bitsPerChar - 1) {\n            context_data.push(getCharFromInt(context_data_val));\n            break;\n        } else context_data_position++;\n    }\n    return context_data.join('');\n}\n\nfunction _decompress(length: number, resetValue: number, getNextValue: (index: number) => number) {\n    let entry = '';\n\n    const dictionary: any[] = [];\n    const result = [];\n    const data = { val: getNextValue(0), position: resetValue, index: 1 };\n\n    let w: string;\n    let next,\n        enlargeIn = 4,\n        dictSize = 4,\n        numBits = 3,\n        i,\n        bits,\n        resb,\n        maxpower,\n        power,\n        c;\n\n    for (i = 0; i < 3; i += 1) {\n        dictionary[i] = i;\n    }\n\n    bits = 0;\n    maxpower = Math.pow(2, 2);\n    power = 1;\n    while (power != maxpower) {\n        resb = data.val & data.position;\n        data.position >>= 1;\n        if (data.position == 0) {\n            data.position = resetValue;\n            data.val = getNextValue(data.index++);\n        }\n        bits |= (resb > 0 ? 1 : 0) * power;\n        power <<= 1;\n    }\n\n    switch ((next = bits)) {\n        case 0:\n            bits = 0;\n            maxpower = Math.pow(2, 8);\n            power = 1;\n            while (power != maxpower) {\n                resb = data.val & data.position;\n                data.position >>= 1;\n                if (data.position == 0) {\n                    data.position = resetValue;\n                    data.val = getNextValue(data.index++);\n                }\n                bits |= (resb > 0 ? 1 : 0) * power;\n                power <<= 1;\n            }\n            c = f(bits);\n            break;\n        case 1:\n            bits = 0;\n            maxpower = Math.pow(2, 16);\n            power = 1;\n            while (power != maxpower) {\n                resb = data.val & data.position;\n                data.position >>= 1;\n                if (data.position == 0) {\n                    data.position = resetValue;\n                    data.val = getNextValue(data.index++);\n                }\n                bits |= (resb > 0 ? 1 : 0) * power;\n                power <<= 1;\n            }\n            c = f(bits);\n            break;\n        case 2:\n            return '';\n    }\n    dictionary[3] = c;\n    w = c;\n    result.push(c);\n    while (true) {\n        if (data.index > length) {\n            return '';\n        }\n\n        bits = 0;\n        maxpower = Math.pow(2, numBits);\n        power = 1;\n        while (power != maxpower) {\n            resb = data.val & data.position;\n            data.position >>= 1;\n            if (data.position == 0) {\n                data.position = resetValue;\n                data.val = getNextValue(data.index++);\n            }\n            bits |= (resb > 0 ? 1 : 0) * power;\n            power <<= 1;\n        }\n\n        switch ((c = bits)) {\n            case 0:\n                bits = 0;\n                maxpower = Math.pow(2, 8);\n                power = 1;\n                while (power != maxpower) {\n                    resb = data.val & data.position;\n                    data.position >>= 1;\n                    if (data.position == 0) {\n                        data.position = resetValue;\n                        data.val = getNextValue(data.index++);\n                    }\n                    bits |= (resb > 0 ? 1 : 0) * power;\n                    power <<= 1;\n                }\n\n                dictionary[dictSize++] = f(bits);\n                c = dictSize - 1;\n                enlargeIn--;\n                break;\n            case 1:\n                bits = 0;\n                maxpower = Math.pow(2, 16);\n                power = 1;\n                while (power != maxpower) {\n                    resb = data.val & data.position;\n                    data.position >>= 1;\n                    if (data.position == 0) {\n                        data.position = resetValue;\n                        data.val = getNextValue(data.index++);\n                    }\n                    bits |= (resb > 0 ? 1 : 0) * power;\n                    power <<= 1;\n                }\n                dictionary[dictSize++] = f(bits);\n                c = dictSize - 1;\n                enlargeIn--;\n                break;\n            case 2:\n                return result.join('');\n        }\n\n        if (enlargeIn == 0) {\n            enlargeIn = Math.pow(2, numBits);\n            numBits++;\n        }\n\n        if (dictionary[c]) {\n            entry = dictionary[c];\n        } else {\n            if (c === dictSize) {\n                entry = w + w.charAt(0);\n            } else {\n                return null;\n            }\n        }\n        result.push(entry);\n\n        // Add w+entry[0] to the dictionary.\n        dictionary[dictSize++] = w + entry.charAt(0);\n        enlargeIn--;\n\n        w = entry;\n\n        if (enlargeIn == 0) {\n            enlargeIn = Math.pow(2, numBits);\n            numBits++;\n        }\n    }\n}\n"],"names":[],"mappings":"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"}