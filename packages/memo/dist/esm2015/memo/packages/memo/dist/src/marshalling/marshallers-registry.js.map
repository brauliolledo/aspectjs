{"version":3,"file":"marshallers-registry.js","sources":["../../../../../../../../src/marshalling/marshallers-registry.ts"],"sourcesContent":["import { assert, isArray, isObject } from '@aspectjs/core/utils';\nimport { MemoFrame } from '../drivers';\nimport { InstantPromise } from '../utils';\nimport { MemoMarshaller } from './marshallers';\nimport { MarshallingContext, UnmarshallingContext } from './marshalling-context';\n\nexport class MarshallersRegistry {\n    private _marshallers: Record<string, MemoMarshaller> = {};\n\n    addMarshaller(...marshallers: MemoMarshaller[]): this {\n        (marshallers ?? []).forEach((marshaller) => {\n            [marshaller.types].flat().forEach((type: string) => {\n                this._marshallers[type] = marshaller;\n            });\n        });\n\n        return this;\n    }\n\n    removeMarshaller(...marshallers: MemoMarshaller[]): this {\n        (marshallers ?? []).forEach((marshaller) => {\n            [marshaller.types].flat().forEach((type: string) => {\n                delete this._marshallers[type];\n            });\n        });\n\n        return this;\n    }\n\n    getMarshaller(typeName: string): MemoMarshaller {\n        const marshaller = this._marshallers[typeName] ?? this._marshallers['*'];\n\n        if (!marshaller) {\n            throw new TypeError(`No marshaller to handle value of type ${typeName}`);\n        }\n\n        return marshaller;\n    }\n\n    marshal<T>(value: T): MarshallingContext<T> {\n        return new MarshallingContextImpl(this, value);\n    }\n\n    unmarshal(frame: MemoFrame<any>): UnmarshallingContext<any> {\n        return new UnmarshallingContextImpl(this, frame).frame.value;\n    }\n}\n\nclass MarshallingContextImpl<T> implements MarshallingContext<T> {\n    private _blacklist: Map<any, MemoFrame<T>> = new Map<any, MemoFrame<T>>();\n    private readonly _promises: Promise<any>[] = [];\n    readonly frame: MemoFrame<T>;\n\n    constructor(private readonly _marshallersRegistry: MarshallersRegistry, public readonly value: T) {\n        this.frame = this._defaultMarshal(this.value);\n    }\n\n    private _defaultMarshal(value: T): MemoFrame<T> {\n        if (this._blacklist.has(value)) {\n            return this._blacklist.get(value);\n        }\n\n        const type = value?.constructor.name ?? typeof value;\n        const marshaller = this._marshallersRegistry.getMarshaller(type);\n\n        const baseFrame = new MemoFrame<T>({ value, type });\n        if (isObject(value) || isArray(value)) {\n            this._blacklist.set(value, baseFrame);\n        }\n\n        const frame = marshaller.marshal(baseFrame, this, this._defaultMarshal.bind(this));\n        if (frame.isAsync()) {\n            this._promises.push(frame.async);\n        }\n        return frame;\n    }\n\n    then<TResult1 = T, TResult2 = never>(\n        onfulfilled?: ((value: MemoFrame<T>) => TResult1 | PromiseLike<TResult1>) | undefined | null,\n        onrejected?: ((reason: any) => TResult2 | PromiseLike<TResult2>) | undefined | null,\n    ): PromiseLike<TResult1> {\n        return InstantPromise.all(...this._promises)\n            .then(() => this.frame)\n            .then(onfulfilled, onrejected) as PromiseLike<TResult1>;\n    }\n}\n\nclass UnmarshallingContextImpl<T = unknown> implements UnmarshallingContext<T> {\n    readonly blacklist?: Map<MemoFrame, any> = new Map<MemoFrame, any>();\n\n    constructor(private readonly _marshallersRegistry: MarshallersRegistry, public readonly frame: MemoFrame<T>) {\n        this._defaultUnmarshal(this.frame);\n    }\n\n    _defaultUnmarshal<T>(frame: MemoFrame<T>): T {\n        assert(!!frame);\n        if (this.blacklist.has(frame)) {\n            return this.blacklist.get(frame);\n        }\n\n        if (!frame) {\n            return null;\n        }\n        if (!(frame instanceof MemoFrame)) {\n            Reflect.setPrototypeOf(frame, MemoFrame.prototype);\n        }\n\n        assert(!!frame.type);\n        const typeName = frame.type ?? '*';\n\n        const marshaller = this._marshallersRegistry.getMarshaller(typeName);\n\n        frame.value = marshaller.unmarshal(frame, this, this._defaultUnmarshal.bind(this));\n        return frame.value;\n    }\n}\n"],"names":[],"mappings":"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"}